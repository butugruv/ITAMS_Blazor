@page "/DeviceIps/{DeviceId:int}"
@inject IDeviceIpData deviceIpData

<TelerikGrid Data="deviceIpsList" EditMode="@GridEditMode.Inline" OnUpdate="@HandleUpdate" OnCreate="@HandleCreate"
             Pageable="true" Sortable="true" FilterMode="@GridFilterMode.FilterMenu"
             ShowColumnMenu="true" Reorderable="true" Groupable="true">
    <GridToolBar>
        <GridCommandButton Command="Add" Icon="add">Add IP</GridCommandButton>
    </GridToolBar>

    <GridColumns>     
        <GridColumn Field="IpAddress" Title="IP Address"></GridColumn>
        <GridColumn Field="MacAddress" Title="MAC Address"></GridColumn>
        <GridCommandColumn>
            <GridCommandButton Command="Save" Icon="save" ShowInEdit="true">Update</GridCommandButton>
            <GridCommandButton Command="Edit" Icon="edit" ThemeColor="primary">Edit</GridCommandButton>
            <GridCommandButton Command="EditScanGroups">Edit ACAS scan groups</GridCommandButton>
        </GridCommandColumn>
    </GridColumns>
</TelerikGrid>

@code {
    [Parameter]
    public int DeviceId { get; set; }

    private List<DeviceIpModel> deviceIpsList;

    protected override async Task OnParametersSetAsync()
    {
        deviceIpsList = await deviceIpData.GetDeviceIps(DeviceId);

    }

    private async Task HandleUpdate(GridCommandEventArgs args)
    {
        DeviceIpModel deviceIp = (DeviceIpModel)args.Item;
        await deviceIpData.UpdateDeviceIp(deviceIp);
        deviceIpsList = await deviceIpData.GetDeviceIps(DeviceId);

    }

    private async Task HandleCreate(GridCommandEventArgs args)
    {
        DeviceIpModel deviceIp = (DeviceIpModel)args.Item;
        deviceIp.DeviceId = DeviceId;
        await deviceIpData.CreateDeviceIp(deviceIp);
        deviceIpsList = await deviceIpData.GetDeviceIps(DeviceId);
    }

    private async Task HandleDelete(GridCommandEventArgs args)
    {
        
    }

}
