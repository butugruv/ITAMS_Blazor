@page "/Devices"
@inject IDeviceData deviceData
@inject NavigationManager navigationManager

<h2 class="border-bottom pt-3 pb-2 mb-3">Devices</h2>

@if (deviceList == null)
{
    <h4>Loading...</h4>
}
else
{

    <TelerikGrid Data="@deviceList" Pageable="true" Sortable="true" FilterMode="@GridFilterMode.FilterMenu" 
                 Resizable="true" ShowColumnMenu="true" Reorderable="true" Groupable="true">
        <GridColumns>
            <GridCommandColumn Width="70px">
                <GridCommandButton ThemeColor="primary" Command="EditDevice" OnClick="@HandleEditButtonClick">Edit</GridCommandButton>

            </GridCommandColumn>
            <GridColumn Field="DeviceName" Title="Device Name" Width="250px"  />
            <GridColumn Field="DeviceFunction" Width="250px" />
            <GridColumn Field="TypeName" Width="250px" />
            <GridColumn Field="Manufacturer" Width="250px" />
            <GridColumn Field="Model" Width="250px" />
            <GridColumn Field="Poc" Width="250px" />
            <GridColumn Field="LocationName" Width="250px" />
            <GridColumn Field="Floor" Width="250px" />
            <GridColumn Field="Room" Width="250px" />
            <GridColumn Field="PackageName" Width="250px" />
            <GridColumn Field="CreatedDate" Width="250px" />
            <GridColumn Field="CreatedBy" Width="250px" />
            <GridColumn Field="ModifiedDate" Width="250px" />
            <GridColumn Field="ModifiedBy" Width="250px" />

            
        </GridColumns>
    </TelerikGrid>
}



@code {
    private List<IDevicesWithLookupsModel> deviceList;

    protected override async Task OnInitializedAsync()
    {
        deviceList = await deviceData.GetDevicesWithLookups();
    }

    private async Task HandleEditButtonClick(GridCommandEventArgs args)
    {
        int id = (args.Item as IDevicesWithLookupsModel).Id; 
        navigationManager.NavigateTo($"Devices/DeviceForm/{id}");
    }


}